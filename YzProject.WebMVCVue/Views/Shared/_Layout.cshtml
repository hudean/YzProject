<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="~/lib/element-ui/theme-chalk/index.css" rel="stylesheet" />
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/vue.js"></script>
    <script src="~/lib/axios/axios.js"></script>
    <script src="~/lib/element-ui/index.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <style>
        * {
            padding: 0;
            margin: 0;
            outline: none;
            box-sizing: border-box;
        }

        html, body {
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            font-size: 14px;
            overflow: hidden;
        }

        #app {
            height: 100%;
        }

        .el-header, .el-footer {
            /* height: 100%;*/
            background-color: #B3C0D1;
            color: #333;
            text-align: center;
            line-height: 60px;
            padding: 0px;
        }

        .el-aside {
            background-color: #D3DCE6;
            text-align: center;
            height: 100%;
        }

        .el-main {
            background-color: #E9EEF3;
            color: #333;
            text-align: center;
            height: 100%;
            -webkit-transition: margin-left 0.2s ease-in-out;
            transition: margin-left 0.2s ease-in-out;
        }

        .el-container {
            height: 100%;
        }

        .main_toggle {
            margin-left: -166px;
        }

        .el-menu-vertical-demo:not(.el-menu--collapse) {
            width: 230px;
            min-height: 400px;
            height: 100%;
            background-color: #545c64;
        }

        .hamburger {
            display: inline-block;
            vertical-align: middle;
            width: 20px;
            height: 20px;
        }

            .hamburger.is-active {
                transform: rotate(180deg);
            }
            /*element-ui中tabs页设置第一个页面不可关闭*/
            .el-tabs__nav .el-tabs__item:nth-child(1) span{
             display: none;
        }
    </style>
</head>

<body>
    <div id="app">
        <el-container>
            <el-aside :width="asideWidth">
                @* <el-radio-group v-model="isCollapse" style="margin-bottom: 20px;">
                <el-radio-button :label="false">展开</el-radio-button>
                <el-radio-button :label="true">收起</el-radio-button>
                </el-radio-group>*@
                <el-menu :default-active="defaultActive"
                         class="el-menu-vertical-demo"
                         background-color="#545c64"
                         text-color="#fff"
                         active-text-color="#ffd04b"
                         router
                         @@open="handleOpen"
                         @@close="handleClose"
                         style="height:100%;"
                         :collapse="isCollapse">
                 @*   <el-submenu index="1">
                        <template slot="title">
                            <i class="el-icon-location"></i>
                            <span slot="title">导航一</span>
                        </template>
                        <el-menu-item-group>
                            <span slot="title">分组一</span>
                            <el-menu-item index="1-1">选项1</el-menu-item>
                            <el-menu-item index="1-2">选项2</el-menu-item>
                        </el-menu-item-group>
                        <el-menu-item-group title="分组2">
                            <el-menu-item index="1-3">选项3</el-menu-item>
                        </el-menu-item-group>
                        <el-submenu index="1-4">
                            <span slot="title">选项4</span>
                            <el-menu-item index="1-4-1">选项1</el-menu-item>
                        </el-submenu>
                    </el-submenu>
                    <el-menu-item index="2">
                        <i class="el-icon-menu"></i>
                        <span slot="title">导航二</span>
                    </el-menu-item>
                    <el-menu-item index="3" disabled>
                        <i class="el-icon-document"></i>
                        <span slot="title">导航三</span>
                    </el-menu-item>
                    <el-menu-item index="4">
                        <i class="el-icon-setting"></i>
                        <span slot="title">导航四</span>
                    </el-menu-item>*@
                    @*<a  href="/home/index">*@
                    <el-menu-item index="1" router @@click="addTab('首页','/home/index','首页','1' )" style="width:100%;">
                        
                        <i class="el-icon-setting"></i>
                        <span slot="title">首页</span>
                       
                    </el-menu-item>
                   @* </a>*@
                    @*<a href="/home/index1" >*@
                    <el-menu-item index="2" router @@click="addTab('导航','/home/index1','导航','2' )" style="width:100%;">
                       
                        <i class="el-icon-setting"></i>
                        <span slot="title">导航</span>
                       
                    </el-menu-item>
                 @*   </a>*@
                </el-menu>
            </el-aside>
            <el-container>
                <el-header style="display:flex;">
                    @* <div style="width:70px;">
                    <el-button @@click="isCollapse = !isCollapse">折叠</el-button>
                    <el-button @@click="handleCollapse">折叠</el-button>
                    </div>*@
                    <div style="width:60px;" @@click="menuToggleClick">
                        <svg v-bind:class="{'is-active': !isCollapse}"
                             class="hamburger"
                             viewBox="0 0 1024 1024"
                             xmlns="http://www.w3.org/2000/svg"
                             width="64"
                             height="64">
                            <path d="M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM142.4 642.1L298.7 519a8.84 8.84 0 0 0 0-13.9L142.4 381.9c-5.8-4.6-14.4-.5-14.4 6.9v246.3a8.9 8.9 0 0 0 14.4 7z" />
                        </svg>
                    </div>
                   @* <div style="width:60px;">
                        <el-button size="small" @@click="addTab(editableTabsValue)">
                            add tab
                        </el-button>
                    </div>*@
                    <div style="width:calc(100% - 60px)">
                        header
                    </div>
                </el-header>
                <el-main>
                  @*  <el-tabs v-model="editableTabsValue" type="border-card" closable @@tab-remove="removeTab" style="height:100%;min-width:900px;">
                        <el-tab-pane v-for="(item, index) in editableTabs"
                                     :key="item.name"
                                     :label="item.title"
                                     :name="item.name"
                                     style="height:100%;">
                            @RenderBody()
                        </el-tab-pane>
                    </el-tabs>*@
                    @RenderBody()
                    @RenderSection("content", false)
                </el-main>
                <el-footer>Footer</el-footer>
            </el-container>
        </el-container>


    </div>

@*
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/vue.js"></script>
    <script src="~/lib/axios/axios.js"></script>
    <script src="~/lib/element-ui/index.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>*@
    
    <script type="text/javascript">
        //$(function(){
        //    var app = new Vue({
        //        el: '#app',
        //        data: function () {
        //            return {
        //                defaultActive: "1",
        //                visible: false,
        //                isCollapse: false,
        //                asideWidth: "230px",
        //                editableTabsValue: '1',
        //                editableTabs: [{
        //                    title: '首页',
        //                    name: '首页',
        //                    content: 'Tab 1 content'
        //                }],
        //                //tabIndex: 1
        //            }
        //        },
        //        computed: {
        //            //添加属性计算 在computed里添加属性计算。记住 scrollerHeight 不需在data进行声明。
        //            scrollerWidth: function () {
        //                return this.asideWidth;
        //            }
        //        },
        //        methods: {
        //            menuToggleClick(key, keyPath) {
        //                this.isCollapse = !this.isCollapse;
        //                //不起作用
        //                //if (this.isCollapse) {
        //                //    this.asideWidth = "50px;";
        //                //}else {
        //                //    this.asideWidth = "230px"
        //                //}
        //                this.asideWidth = 'auto'  //修改成功，这种方式相当于直接修改html上的值，会重新渲染
        //                console.log(this.asideWidth);
        //                console.log('toggleClick', key, keyPath);
        //            },
        //            handleSelect(key, keyPath) {
        //                console.log('handleSelect', key, keyPath);
        //            },
        //            handleOpen(key, keyPath) {
        //                console.log('handleOpen', key, keyPath);
        //            },
        //            handleClose(key, keyPath) {
        //                console.log('handleClose', key, keyPath);
        //            },
        //            addTab(title, path, tabName, index) {
        //                window.location.href = path;
        //                this.defaultActive = index;
        //                return;
        //                let flag = false;
        //                var that = this;
        //                let tabs = this.editableTabs;
        //                for (let tab of tabs) {
        //                    if (tab.name === tabName) {
        //                        this.editableTabsValue = tabName;
        //                        flag = true;
        //                        return false;
        //                    }

        //                }
        //                //let newTabName = ++this.tabIndex + '';
        //                if (!flag) {
        //                    this.editableTabs.push({
        //                        title: title,
        //                        name: tabName,
        //                        content: null//'New Tab content'
        //                    });
        //                    this.editableTabsValue = tabName;
        //                    //$.post(path, function (result) {
        //                    //    $("#tab_" + name).html(result);
        //                    //    that.tabsData[that.tabsData.length - 1].content = eval(name);
        //                    //})
        //                }
        //            },
        //            removeTab(targetName) {
        //                let tabs = this.editableTabs;
        //                let activeName = this.editableTabsValue;
        //                if (activeName === targetName) {
        //                    tabs.forEach((tab, index) => {
        //                        if (tab.name === targetName) {
        //                            let nextTab = tabs[index + 1] || tabs[index - 1];
        //                            if (nextTab) {
        //                                activeName = nextTab.name;
        //                            }
        //                        }
        //                    });
        //                }

        //                this.editableTabsValue = activeName;
        //                this.editableTabs = tabs.filter(tab => tab.name !== targetName);
        //            }
        //        }
        //    })
        //})
       
    </script>

    @*@await RenderSectionAsync("Scripts", required: false)*@
    @RenderSection("head", false);
</body>
</html>